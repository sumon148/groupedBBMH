% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Simulation Infection Sampling.R
\name{compute_simulated_leakage}
\alias{compute_simulated_leakage}
\title{Compute Expected Leakage and Probability of Leakage from Model-based Simulation Output}
\usage{
compute_simulated_leakage(sim_object)
}
\arguments{
\item{sim_object}{A simulation result object returned by the main simulation function,
typically structured with elements: `Simulation_Tx`, `Simulation_tx`, and
`Simulation_Infection_Ty_Results`.}
}
\value{
A list with the following elements:
\describe{
  \item{E.Li}{Expected leakage per batch (mean undetected infections)}
  \item{P.Li}{Probability of leakage per batch}
  \item{Median.Li}{Median leakage per batch, conditional on leakage occurring}
  \item{Pseudo.E.Li.median}{Pseudo-expected leakage = P.Li × Median.Li}
  \item{Median.Li.Overall}{Overall median leakage across all batches/simulations}
  \item{P.Li.Overall}{Overall probability of leakage}
  \item{Pseudo.E.Li.Overall}{Overall pseudo-expected leakage}
}
}
\description{
This function computes batch-level and overall leakage statistics based on the output
of a simulation object generated by the package's core simulation functions
`simulate_infection_sampling` and `run_infection_simulations`.
}
\details{
Leakage is defined as the number of undetected infections in a batch, particularly in
the presence of false negatives (FN). The function computes expected leakage, probability
of leakage, and pseudo-expected leakage (i.e., probability × median leakage).


The function calculates:
\itemize{
  \item \strong{E.Li}: Expected leakage per batch (mean of undetected infections)
  \item \strong{P.Li}: Probability of leakage (proportion of simulations with FN)
  \item \strong{Median.Li}: Median leakage, conditional on leakage > 0
  \item \strong{Pseudo.E.Li.median}: Product of P.Li and Median.Li
  \item \strong{Overall statistics}: Same metrics aggregated across all batches/simulations
}

The function assumes false negatives are encoded as `3` in the `Simulation_Infection_Ty_Results`
matrix, and treats these as missed infections when computing leakage.
}
\examples{
# Example: Minimal simulation object with 5 batches and 5 simulations
Tx <- matrix(
  c(0, 13, 0, 8889, 0,
    0, 0, 0, 0, 0,
    0, 0, 0, 0, 5033,
    0, 0, 0, 0, 0,
    0, 0, 0, 0, 0),
  nrow = 5,
  ncol = 5,
  byrow = FALSE
)

tx <- matrix(c(
  0, 0, 0, 0, 0,
  0, 0, 0, 0, 0,
  0, 0, 0, 0, 1,
  0, 0, 0, 0, 0,
  0, 0, 0, 0, 0
), nrow = 5, ncol = 5, byrow = FALSE)

FN <- matrix(c(
  2, 3, 2, 3, 2,
  2, 2, 2, 2, 2,
  2, 2, 2, 2, 1,
  2, 2, 2, 2, 2,
  2, 2, 2, 2, 2
), nrow = 5, ncol = 5, byrow = FALSE)

# Construct the simulation object
sim_obj <- list(
  Simulation_Tx = Tx,
  Simulation_tx = tx,
  Simulation_Infection_Ty_Results = FN
)

# Compute leakage statistics
compute_simulated_leakage(sim_obj)
\dontrun{
sim <- run_infection_simulations(...)
leakage_stats <- compute_simulated_leakage(sim)
print(leakage_stats$E.Li)
}

}
\seealso{
\code{\link{simulate_infection_sampling}}, \code{\link{run_infection_simulations}}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLE Functions.R
\name{fit_trGroupedBB}
\alias{fit_trGroupedBB}
\title{Fit Truncated Grouped Beta-Binomial (trGroupedBB) Model to Grouped Data}
\usage{
fit_trGroupedBB(
  ty,
  freq,
  b,
  m,
  cutoff,
  sensitivity = 1,
  specificity = 1,
  theta = Inf,
  R = 1000,
  control = list(reltol = 1e-12, fnscale = -1),
  return_hessian = FALSE,
  leakage = FALSE,
  M = NULL,
  B = NULL
)
}
\arguments{
\item{ty}{Numeric vector. Observed counts.}

\item{freq}{Numeric vector. Frequencies for each count.}

\item{b}{Integer. Number of trials per group.}

\item{m}{Integer. Minimum group size or related parameter.}

\item{cutoff}{Numeric. Truncation cutoff value.}

\item{sensitivity}{Numeric, default 1. Sensitivity parameter.}

\item{specificity}{Numeric, default 1. Specificity parameter.}

\item{theta}{Numeric, default Inf. Overdispersion or shape parameter.}

\item{R}{Integer, default 1000. Number of quantiles for numerical integration.}

\item{control}{List. Control parameters passed to optim.}

\item{return_hessian}{Logical, default FALSE. Return Hessian matrix if TRUE.}

\item{leakage}{Logical, default FALSE. Whether to model leakage. Requires M and B if TRUE.}

\item{M}{Integer, optional. Required if leakage = TRUE.}

\item{B}{Integer, optional. Required if leakage = TRUE.}
}
\value{
A list containing estimated parameters `alpha`, `beta`, `mu` (mean parameter),
        sensitivity, specificity, log-likelihood value (`loglik`), and convergence status.
        If `hessian = TRUE`, also returns the Hessian matrix. If `leakage = TRUE`, includes
        leakage-related estimates `P.L` and `E.L`.
}
\description{
This function fits a truncated beta-binomial model to grouped count data using maximum likelihood estimation
for a given cutoff. It estimates parameters alpha and beta unless provided, and supports estimating leakage
when `leakage = TRUE`.
}
\examples{
freq <- c(2815, 9, 10, 6, 1, 3, 2, 0, 1, 2, 1, 0, 0, 0)
ty <- 0:13

# Fit truncated grouped beta-binomial model with cutoff = 0 (no truncation)
trbb.m1 <- fit_trGroupedBB(ty, freq, b = 13, m = 5, cutoff = 0)
print(trbb.m1)

# Fit truncated grouped beta-binomial model with cutoff = 0.01 and imperfect sensitivity
trbb.m2 <- fit_trGroupedBB(ty, freq, b = 13, m = 5, cutoff = 0.01,
                       sensitivity = 0.8, specificity = 1)
print(trbb.m2)
}

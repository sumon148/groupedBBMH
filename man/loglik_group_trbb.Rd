% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLE Functions.R
\name{loglik_group_trbb}
\alias{loglik_group_trbb}
\title{Log-Likelihood Function for Group Testing with Test Error under minimum prevalence}
\usage{
loglik_group_trbb(
  par,
  ty,
  freq,
  theta,
  mu,
  alpha,
  beta,
  cutoff,
  sensitivity = NULL,
  specificity = NULL,
  b,
  R = 1000,
  m,
  M,
  deviance = FALSE,
  subtract = 0,
  B,
  mushape = FALSE,
  alpha.mu = FALSE,
  leakage = FALSE
)
}
\arguments{
\item{par}{A numeric vector of parameters (on log or logit scale) depending on what is fixed or estimated.}

\item{ty}{Observed number of positive group tests per replicate.}

\item{freq}{Frequency of each ty value.}

\item{theta}{Clustering parameter. Use `Inf` for considering random groups.}

\item{mu}{Optional; mean of the Beta prior for contamination probability.}

\item{alpha}{Optional; shape parameter of the Beta prior.}

\item{beta}{Optional; shape parameter of the Beta prior.}

\item{cutoff}{Truncation cutoff for the Beta distribution. `cutoff=0` indicates standard BB model.}

\item{sensitivity}{Test sensitivity.}

\item{specificity}{Test specificity.}

\item{b}{Number of groups per replicate.}

\item{R}{Number of integration points for numerical approximation.}

\item{m}{Pool-size used for group testing. This can be equal to M if all the group members are used for testing.}

\item{M}{Group size.}

\item{deviance}{Logical. If TRUE, returns deviance (-2 * log-likelihood).}

\item{subtract}{A constant to subtract from the log-likelihood.}

\item{B}{Reference number of groups per batch / replicate for leakage modeling.}

\item{mushape}{Logical. If TRUE, parameterize using mu and shape.}

\item{alpha.mu}{Logical. If TRUE, parameterize using alpha and mu.}

\item{leakage}{Logical. If TRUE, compute expected leakage quantities assuming imperfect sensitivity.}
}
\value{
Depending on arguments:
\itemize{
  \item If `leakage = FALSE` and `deviance = TRUE`, returns deviance.
  \item If `leakage = FALSE` and `deviance = FALSE`, returns log-likelihood.
  \item If `leakage = TRUE`, returns a named vector with deviance, expected leakage, and probability leakage.
}
}
\description{
Computes the log-likelihood under a truncated Beta-Binomial model for grouped testing outcomes, with support for imperfect diagnostic tests.
This function supports flexible parameterizations (e.g., in terms of alpha, beta, mu) and includes extensions for truncated prevalence modeling,
numerical integration over latent prevalence values, and optional leakage estimation under imperfect sensitivity.
Suitable for use with optimization routines (e.g., \code{optim}) to estimate model parameters from grouped test outcome data.
}
\details{
This function integrates over a truncated Beta distribution to compute the expected likelihood,
adjusted for misclassification due to imperfect test sensitivity and specificity. It supports various
parameterizations for alpha, beta, and mu, and incorporates numerical integration over latent prevalence.
Parameter configuration depends on which inputs are missing:
\itemize{
\item If \code{theta}, \code{mu}, and \code{alpha} are all missing, then \code{par = c(log(alpha), log(beta), log(theta))}.
\item If \code{theta} is missing, it is inferred as \code{exp(last element of par)}.
\item If \code{alpha} is missing, it is inferred as \code{exp(first element of par)}.
\item If \code{alpha} is provided, \code{beta} is taken as \code{exp(first element of par)} (when \code{mu} is missing).
\item If \code{mu} is supplied, then \code{beta = (1 - mu) / mu * alpha}.
}

Users can directly call this function within optimization routines such as \code{optim()} to obtain maximum likelihood estimates.
The user should specify fixed parameters (e.g., mu or alpha) and pass remaining parameters through \code{par}.
For maximum flexibility, the function is not wrapped in a specific optimizer, allowing users to tailor optimization (e.g., convergence criteria, bounds, or transformation) based on their needs.
The output of \code{optim()} provides the parameter estimates on the log or logit scale, depending on the model specification.
Integration is performed over the latent prevalence distribution:
\itemize{
\item \code{R} controls the number of quantile points used for numeric integration over \code{p}.
}

Expected parameter formats:
\itemize{
\item For given \code{alpha}: \code{par = c(beta, sensitivity, specificity)}
\item For given \code{mu}: \code{par = c(alpha, sensitivity, specificity)}
\item For given \code{beta}: \code{par = c(alpha, sensitivity, specificity)}
}
}
\note{
This implementation assumes \code{theta = Inf}, which indicates groups are formed randomly (uncluster).
}
\section{Leakage}{

Leakage quantities (\code{E.L}, \code{P.L}) are calculated under the assumption of perfect specificity.
}

\examples{
freq = c(2815,9,10,6,1,3,2,0,1,2,1,0,0,0)
ty = c(0:13)
# For estimating log(alpha) and log(beta) for a cutoff=0, which reflects standard BB model
mle.est.cutoff.0 <- optim(c(0, 0), loglik_group_trbb,ty = ty,freq = freq,b=13,m=5,R = 1e4,theta = Inf,cutoff = 0,control = list(reltol = 1e-12, fnscale = -1))
exp(mle.est.cutoff.0$par)
# For estimating log(alpha) and log(beta) for a given cutt-off of 1\%, which reflects truncated BB model
mle.est.cutoff.01 <- optim(c(0, 0), loglik_group_trbb,ty = ty,freq = freq,b=13,m=5,theta = Inf,R = 1e4,sensitivity = 1, specificity = 1,cutoff = 0.01,deviance = FALSE,control = list(reltol = 1e-12, fnscale = -1),hessian = FALSE)
exp(mle.est.cutoff.01$par)
# For estimating log(beta) for a given alpha and cutoff greater than 0, which reflects truncated BB model
beta.est.cutoff.01 <- optim(c(0),loglik_group_trbb,ty=ty,freq=freq,b=13,m=5,theta=Inf,R=1e4,alpha=0.005,cutoff = 0.01,sensitivity=1,specificity=1,
deviance=FALSE,method="Brent", control=list(reltol=1e-12,fnscale=-1), hessian=FALSE,lower = c(log(0.05)),upper = c(log(100)))
exp(beta.est.cutoff.01$par)
# For estimating log(alpha) for a given beta and cutoff greater than 0, which reflects truncated BB model
alpha.est.cutoff.01 <- optim(c(0),loglik_group_trbb,ty=ty,freq=freq,b=13,m=5,theta=Inf,R=1e4,beta=4.5,cutoff = 0.01,sensitivity=1,specificity=1,
deviance=FALSE,method="Brent", control=list(reltol=1e-12,fnscale=-1), hessian=FALSE,lower = c(log(0.0005)),upper = c(log(0.5)))
exp(alpha.est.cutoff.01$par)
# For estimating log(alpha) for a given mu and cutoff greater than 0, which reflects truncated BB model
# alpha missing but mu available
alpha.est.cutoff.01 <- optim(c(0),loglik_group_trbb,ty=ty,freq=freq,b=13,m=5,theta=Inf,R=1e4,mu=0.0005,cutoff = 0.01,sensitivity=1,specificity=1,
deviance=FALSE,method="Brent", control=list(reltol=1e-12,fnscale=-1), hessian=FALSE,lower = c(log(0.00005)),upper = c(log(0.05)))
exp(alpha.est.cutoff.01$par)
# For estimating leakage for a given alpha, beta, sensitivity and cutoff greater than 0, which reflects truncated BB model
 leakage.estimate <- loglik_group_trbb(c(log(0.005),log(4.5)),ty=ty,freq=freq,b=13,B=8000,m=5,M=40,cutoff=0.01,
 theta=Inf,leakage=TRUE,R=1e4,sensitivity=1.0,specificity=1.0)
leakage.estimate
}
